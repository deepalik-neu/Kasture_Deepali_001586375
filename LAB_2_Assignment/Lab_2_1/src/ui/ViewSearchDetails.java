/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Car;
import model.CarListHistory;

/**
 *
 * @author deepalikasture
 */
public class ViewSearchDetails extends javax.swing.JPanel {

    /**
     * Creates new form ViewSearchDetails
     */
    
    CarListHistory carList;
    DefaultTableModel model;
    public ViewSearchDetails(CarListHistory carList) {
        initComponents();
        this.carList=carList;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarList = new javax.swing.JTable();
        btnAvailableCar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnUberCars = new javax.swing.JButton();
        lblCarName = new javax.swing.JLabel();
        txtCarName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtManufacturedYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtModelNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        min = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        max = new javax.swing.JComboBox<>();
        lblIsAvailable = new javax.swing.JLabel();
        lblIsExpired = new javax.swing.JLabel();
        chkIsAvailable = new javax.swing.JCheckBox();
        chkIsExpired = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        btnTotalCars = new javax.swing.JButton();
        btnTotalCarsAvailable = new javax.swing.JButton();
        btnTotalCarsNotAvailable = new javax.swing.JButton();
        txtTotalCars = new javax.swing.JTextField();
        txtTotalCarsAvailable = new javax.swing.JTextField();
        txtTotalCarsNotAvailable = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("View Search Details");

        tblCarList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Name", "Model Number", "Serial Number", "City", "Manufacturing Year", "Number of Seats", "Is Available", "Is Expired?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarList);

        btnAvailableCar.setText("Get Available Car");
        btnAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailableCarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Filters");

        btnUberCars.setText("All Car by Uber");
        btnUberCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUberCarsActionPerformed(evt);
            }
        });

        lblCarName.setText("Car Name");

        jLabel3.setText("Manufactured Year");

        jLabel4.setText("City");

        jLabel5.setText("Model Number");

        jLabel6.setText("Serial Number");

        min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", " ", " " }));
        min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minActionPerformed(evt);
            }
        });

        jLabel7.setText("Seats");

        max.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        lblIsAvailable.setText("is Available");

        lblIsExpired.setText("is Expired?");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnTotalCars.setText("Total Cars");
        btnTotalCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalCarsActionPerformed(evt);
            }
        });

        btnTotalCarsAvailable.setText("Available Cars");
        btnTotalCarsAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalCarsAvailableActionPerformed(evt);
            }
        });

        btnTotalCarsNotAvailable.setText("Cars Not Available");
        btnTotalCarsNotAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalCarsNotAvailableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnAvailableCar)
                                    .addGap(92, 92, 92)
                                    .addComponent(btnUberCars)
                                    .addGap(73, 73, 73))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(lblCarName)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel7)
                                        .addComponent(lblIsAvailable)
                                        .addComponent(txtTotalCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtCarName)
                                                    .addComponent(txtManufacturedYear)
                                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(chkIsAvailable))
                                            .addGap(46, 46, 46)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblIsExpired)
                                                    .addComponent(jLabel6)))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(chkIsExpired)
                                                .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(btnSearch)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtTotalCarsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(118, 118, 118)
                                .addComponent(txtTotalCarsNotAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btnTotalCars)
                        .addGap(36, 36, 36)
                        .addComponent(btnTotalCarsAvailable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(btnTotalCarsNotAvailable)))
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtTotalCars, txtTotalCarsAvailable, txtTotalCarsNotAvailable});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnTotalCars, btnTotalCarsAvailable, btnTotalCarsNotAvailable});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAvailableCar)
                    .addComponent(btnUberCars))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTotalCars)
                            .addComponent(btnTotalCarsAvailable)
                            .addComponent(btnTotalCarsNotAvailable))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalCarsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCarName)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtManufacturedYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIsAvailable)
                            .addComponent(lblIsExpired)
                            .addComponent(chkIsAvailable)
                            .addComponent(chkIsExpired))
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(txtTotalCarsNotAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        Byte minSeat=   Byte.parseByte(min.getSelectedItem().toString());
      Byte maxSeat=   Byte.parseByte(max.getSelectedItem().toString());
          String manuFacturedYear= txtManufacturedYear.getText();
      String carName= txtCarName.getText();
     String city=   txtCity.getText();

      

      String SerialNumber=   txtSerialNumber.getText() ;
     String ModelNumber=  txtModelNumber.getText();
    Boolean availablity=  chkIsAvailable.isSelected();
     Boolean certification=   chkIsExpired.isSelected();
   System.out.println(minSeat);
        System.out.println(maxSeat);


        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        model.setRowCount(0);
        for(Car car: carList.getCarList()){
        Object[] row=new Object[10];
        
        row[0]=car;

        if(manuFacturedYear.length()==0 || car.getManufacturedYear().equals(manuFacturedYear) ){
            if(carName.length()==0 || car.getName().equals(carName)){
            if(SerialNumber.length()==0 || car.getSerialNumber().equals(SerialNumber)){
            if(city.length()==0 || car.getCity().equals(city)){
             if((minSeat==0 && maxSeat==0) || (car.getNumberOfSeats()>=minSeat &&car.getNumberOfSeats()<=maxSeat)){
            if(ModelNumber.length()==0  || car.getModelNumber().equals(ModelNumber)){
            if(availablity==false || car.getIsAvailable()==availablity){
            if(certification==false || car.getIsExpired()==certification){
            row[1]=car.getModelNumber();
            row[2]=car.getSerialNumber();
            row[3]=car.getCity();
            row[4]=car.getManufacturedYear();
            row[5]=car.getNumberOfSeats();
            row[6]=car.getIsAvailable();
            row[7]=car.getIsExpired();
        
                model.addRow(row);

        }
        }
        }
        }
        }
        }
        }
        }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailableCarActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        model.setRowCount(0);
        for(Car car: carList.getCarList()){
        Object[] row=new Object[10];
        row[0]=car;
                if(car.getIsAvailable()==true){
                 row[1]=car.getModelNumber();
        row[2]=car.getSerialNumber();
        row[3]=car.getCity();
        row[4]=car.getManufacturedYear();
        row[5]=car.getNumberOfSeats();
        row[6]=car.getIsAvailable();
        row[7]=car.getIsExpired();;
        
                model.addRow(row);
                break;

        }
        }
    }//GEN-LAST:event_btnAvailableCarActionPerformed

    private void btnUberCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUberCarsActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        model.setRowCount(0);
        ArrayList<String> num = new ArrayList<String>();

        for(Car car: carList.getCarList()){
        Object[] row=new Object[10];
       if(! num.contains(car.getName())){
           num.add((car.getName()));
                row[0]=car.getName();
                    model.addRow(row);
       }
        }
    }//GEN-LAST:event_btnUberCarsActionPerformed

    private void minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minActionPerformed

    private void btnTotalCarsNotAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalCarsNotAvailableActionPerformed
        // TODO add your handling code here:
        int sum=0;
        if(carList.getCarList().size()>0){
            for(Car car: carList.getCarList()){
                if(car.getIsAvailable()==false){
                    sum=sum+1;
                }
            }
        }
       txtTotalCarsNotAvailable.setText(String.valueOf(sum));
    }//GEN-LAST:event_btnTotalCarsNotAvailableActionPerformed

    private void btnTotalCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalCarsActionPerformed
        // TODO add your handling code here:
        int totalCars=carList.getCarList().size();
        txtTotalCars.setText(String.valueOf(totalCars));
    }//GEN-LAST:event_btnTotalCarsActionPerformed

    private void btnTotalCarsAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalCarsAvailableActionPerformed
        // TODO add your handling code here:
        int sum=0;
        if(carList.getCarList().size()>0){
            for(Car car: carList.getCarList()){
                if(car.getIsAvailable()==true){
                    sum=sum+1;
                }
            }
        }
        txtTotalCarsAvailable.setText(String.valueOf(sum));
    }//GEN-LAST:event_btnTotalCarsAvailableActionPerformed

    
     private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        model.setRowCount(0);
        for(Car car: carList.getCarList()){
        Object[] row=new Object[10];
       row[0]=car;
        row[1]=car.getModelNumber();
        row[2]=car.getSerialNumber();
        row[3]=car.getCity();
        row[4]=car.getManufacturedYear();
        row[5]=car.getNumberOfSeats();
        row[6]=car.getIsAvailable();
        row[7]=car.getIsExpired();

model.addRow(row);
        }
    }

    private void filter(String query){
       model = (DefaultTableModel) tblCarList.getModel();

        TableRowSorter<DefaultTableModel> tr =new TableRowSorter<>(model);


        tblCarList.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailableCar;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTotalCars;
    private javax.swing.JButton btnTotalCarsAvailable;
    private javax.swing.JButton btnTotalCarsNotAvailable;
    private javax.swing.JButton btnUberCars;
    private javax.swing.JCheckBox chkIsAvailable;
    private javax.swing.JCheckBox chkIsExpired;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCarName;
    private javax.swing.JLabel lblIsAvailable;
    private javax.swing.JLabel lblIsExpired;
    private javax.swing.JComboBox<String> max;
    private javax.swing.JComboBox<String> min;
    private javax.swing.JTable tblCarList;
    private javax.swing.JTextField txtCarName;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacturedYear;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JTextField txtTotalCars;
    private javax.swing.JTextField txtTotalCarsAvailable;
    private javax.swing.JTextField txtTotalCarsNotAvailable;
    // End of variables declaration//GEN-END:variables
}
